<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>johnyeary.com/</title>
   
   <link>https://johnyeary.com</link>
   <description>A Caffeinated Java Developer.</description>
   <language>en-us</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Apache FTP Client... A Found Surprise</title>
	  <link>//2020-05-22-apache-ftp-client.html</link>
	  <author></author>
	  <pubDate>2020-05-22T00:00:00+00:00</pubDate>
	  <guid>//2020-05-22-apache-ftp-client.html</guid>
	  <description><![CDATA[
	     <h2 id="introduction">Introduction</h2>
<p>I was cleaning up my hard drive this Memorial Day weekend when I found a bunch of code I wrote many years ago. It is funny how hindsight is 20/20. The old code examples I found were in some cases awful by today’s standards. At the time, I thought it looked pretty good. I guess as we celebrate 25 years of Java and me coding it, we should look at some code from dusty days past.</p>

<h2 id="code">Code</h2>

<p>The code was originally written for Apache <code class="highlighter-rouge">commons-net-1.3.0</code>, but it still works and not a lot has changed with Apache… or FTP for decades. Let’s look at some code. I did update some of it from its original state. I couldn’t let it pass. It may have a little Java 8+ “enhancements”.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * FTPTransfer.java
 *
 * Created on January 23, 2004, 8:20 AM
 */</span>

 <span class="cm">/*
 * Copyright (C) 2004 John Yeary. All Rights Reserved.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS," WITHOUT A WARRANTY OF ANY KIND. ALL
 * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES,
 * INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY EXCLUDED. JOHN YEARY AND
 * ITS LICENSORS SHALL NOT BE LIABLE FOR ANY DAMAGES OR LIABILITIES
 * SUFFERED BY LICENSEE AS A RESULT OF  OR RELATING TO USE, MODIFICATION
 * OR DISTRIBUTION OF THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL
 * JOHN YEARY OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR
 * FOR DIRECT, INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE
 * DAMAGES, HOWEVER CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY,
 * ARISING OUT OF THE USE OF OR INABILITY TO USE SOFTWARE, EVEN IF JOHN YEARY HAS
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 *
 * You acknowledge that Software is not designed, licensed or intended
 * for use in the design, construction, operation or maintenance of any
 * nuclear facility.
 */</span>

<span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">javanetwork</span><span class="o">.</span><span class="na">net</span><span class="o">;</span>

<span class="cm">/**
 *
 * @author John Yeary
 * @version $Revision$
 *
 * &lt;p&gt;
 * This class is designed to transfer files via FTP using the org.apache.commons.net framework.&lt;/p&gt;
 */</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.SocketException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.logging.Level</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.logging.Logger</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.regex.PatternSyntaxException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.Data</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.NoArgsConstructor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.commons.net.ftp.FTP</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.commons.net.ftp.FTPClient</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.commons.net.ftp.FTPConnectionClosedException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.commons.net.ftp.FTPReply</span><span class="o">;</span>

<span class="nd">@NoArgsConstructor</span>
<span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FTPTransfer</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">FTPClient</span> <span class="n">ftp</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="nc">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">FTPTransfer</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">());</span>

    <span class="cm">/**
     * The username to use to login to FTP server.
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">username</span><span class="o">;</span>

    <span class="cm">/**
     * The target FTP server hostname.
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">hostname</span><span class="o">;</span>

    <span class="cm">/**
     * Password for username.
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">password</span><span class="o">;</span>

    <span class="cm">/**
     * The target directory for where the files are to be placed.
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">targetDirectory</span><span class="o">;</span>

    <span class="cm">/**
     * File transfer type. It is usually {@link FTP#ASCII_FILE_TYPE}, or {@link FTP#BINARY_FILE_TYPE}. The default file
     * transfer type is ASCII.
     */</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">fileType</span> <span class="o">=</span> <span class="no">FTP</span><span class="o">.</span><span class="na">ASCII_FILE_TYPE</span><span class="o">;</span>

    <span class="cm">/**
     * Logging level. The default logging level is INFO.
     */</span>
    <span class="kd">private</span> <span class="nc">Level</span> <span class="n">logLevel</span> <span class="o">=</span> <span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">;</span>

    <span class="cm">/**
     * An array of files to be transferred.
     */</span>
    <span class="kd">private</span> <span class="n">java</span><span class="o">.</span><span class="na">io</span><span class="o">.</span><span class="na">File</span><span class="o">[]</span> <span class="n">files</span><span class="o">;</span>

    <span class="cm">/**
     * Indicates if the directory should be created on the remote FTP server if they do not exist.
     */</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">createDirectories</span><span class="o">;</span>

    <span class="cm">/**
     * Connect to FTP server based on the hostname, username, and password set. If it encounters any issues connecting,
     * it will call the &lt;code&gt;disconnect()&lt;/code&gt; method. This method also starts the default logging.
     */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">connect</span><span class="o">()</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">replyCode</span><span class="o">;</span>

        <span class="n">ftp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FTPClient</span><span class="o">();</span>

        <span class="k">try</span> <span class="o">{</span>

            <span class="k">if</span> <span class="o">(</span><span class="n">hostname</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Connecting to {0}."</span><span class="o">,</span> <span class="n">hostname</span><span class="o">);</span>
                <span class="n">ftp</span><span class="o">.</span><span class="na">connect</span><span class="o">(</span><span class="n">hostname</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"User: {0}"</span><span class="o">,</span> <span class="n">username</span><span class="o">);</span>
                <span class="n">ftp</span><span class="o">.</span><span class="na">login</span><span class="o">(</span><span class="n">username</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>

                <span class="c1">// Check to make sure we have a usable connection</span>
                <span class="n">replyCode</span> <span class="o">=</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyCode</span><span class="o">();</span>

                <span class="k">if</span> <span class="o">(!</span><span class="nc">FTPReply</span><span class="o">.</span><span class="na">isPositiveCompletion</span><span class="o">(</span><span class="n">replyCode</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"FTP failed to connect with reply code: {0}"</span><span class="o">,</span> <span class="n">replyCode</span><span class="o">);</span>
                    <span class="n">disconnect</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"No hostname set. Exiting application."</span><span class="o">);</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>

        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SocketException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"SocketException on Connection"</span><span class="o">);</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"IOException on Connection"</span><span class="o">);</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="cm">/**
     * Disconnect from connected FTP server.
     */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">disconnect</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Logging out."</span><span class="o">);</span>
            <span class="n">ftp</span><span class="o">.</span><span class="na">logout</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">ignored</span><span class="o">)</span> <span class="o">{</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">ftp</span><span class="o">.</span><span class="na">isConnected</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Disconnecting."</span><span class="o">);</span>
                    <span class="n">ftp</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Disconnected."</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">WARNING</span><span class="o">,</span> <span class="s">"IOException on disconnect."</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">WARNING</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="cm">/**
     * Transfers a single file in ASCII or BINARY depending on the file type set using &lt;code&gt;setFileType&lt;/code&gt;. The
     * default file transfer type is ASCII.
     *
     * @return
     */</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">transferFiles</span><span class="o">()</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">reply</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">FileInputStream</span> <span class="n">in</span><span class="o">;</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">targetDirectorySplit</span><span class="o">;</span>

        <span class="c1">// Connect to server.</span>
        <span class="n">connect</span><span class="o">();</span>

        <span class="c1">// Check to see if we are connected before continuing</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">ftp</span><span class="o">.</span><span class="na">isConnected</span><span class="o">())</span> <span class="o">{</span>

            <span class="k">try</span> <span class="o">{</span>
                <span class="c1">// Change to the requested directory</span>
                <span class="n">reply</span> <span class="o">=</span> <span class="n">ftp</span><span class="o">.</span><span class="na">cwd</span><span class="o">(</span><span class="n">targetDirectory</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>

                <span class="k">if</span> <span class="o">(</span><span class="nc">FTPReply</span><span class="o">.</span><span class="na">isNegativePermanent</span><span class="o">(</span><span class="n">reply</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">reply</span> <span class="o">==</span> <span class="nc">FTPReply</span><span class="o">.</span><span class="na">CODE_553</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c1">// Permission denied to target directory</span>

                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"{0} - Permission denied to target directory."</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>

                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nc">FTPReply</span><span class="o">.</span><span class="na">isNegativePermanent</span><span class="o">(</span><span class="n">reply</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">reply</span> <span class="o">==</span> <span class="nc">FTPReply</span><span class="o">.</span><span class="na">CODE_550</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Directory: {0} does not not exist."</span><span class="o">,</span> <span class="n">targetDirectory</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">createDirectories</span><span class="o">)</span> <span class="o">{</span>

                        <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Attempting to create {0}."</span><span class="o">,</span> <span class="n">targetDirectory</span><span class="o">);</span>

                        <span class="c1">//Split the target directory into tokens to create the directory and sub-directories</span>
                        <span class="n">targetDirectorySplit</span> <span class="o">=</span> <span class="n">targetDirectory</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"/"</span><span class="o">);</span>

                        <span class="c1">//Create the directory and sub-directories</span>
                        <span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">directory</span> <span class="o">:</span> <span class="n">targetDirectorySplit</span><span class="o">)</span> <span class="o">{</span>
                            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Creating: {0}"</span><span class="o">,</span> <span class="n">directory</span><span class="o">);</span>
                            <span class="n">reply</span> <span class="o">=</span> <span class="n">ftp</span><span class="o">.</span><span class="na">mkd</span><span class="o">(</span><span class="n">directory</span><span class="o">);</span>
                            <span class="n">ftp</span><span class="o">.</span><span class="na">cwd</span><span class="o">(</span><span class="n">directory</span><span class="o">);</span>
                            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>
                        <span class="o">}</span>
                        <span class="c1">// Check the final response from server to decide if we should continue.</span>
                        <span class="k">if</span> <span class="o">(</span><span class="nc">FTPReply</span><span class="o">.</span><span class="na">isNegativePermanent</span><span class="o">(</span><span class="n">reply</span><span class="o">))</span> <span class="o">{</span>
                            <span class="n">disconnect</span><span class="o">();</span>
                            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="o">}</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"Directory: {0} does not not exist, and the application is not set to create directories."</span><span class="o">,</span> <span class="n">targetDirectory</span><span class="o">);</span>
                        <span class="n">disconnect</span><span class="o">();</span>
                        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">PatternSyntaxException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span>
                        <span class="s">"The target directory format was not in typical UNIX style: /directory/subdirectory"</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">"Can not create directory {0}."</span><span class="o">,</span> <span class="n">targetDirectory</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="c1">// Set the file type for data transfer</span>
            <span class="n">ftp</span><span class="o">.</span><span class="na">setFileType</span><span class="o">(</span><span class="n">fileType</span><span class="o">);</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>

            <span class="c1">//Start transferring the files.</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">files</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">file</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Opening FileInputStream to: {0}"</span><span class="o">,</span> <span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
                    <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileInputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Transferring {0} to server."</span><span class="o">,</span> <span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
                    <span class="n">ftp</span><span class="o">.</span><span class="na">storeFile</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">in</span><span class="o">);</span>
                    <span class="n">reply</span> <span class="o">=</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyCode</span><span class="o">();</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="n">ftp</span><span class="o">.</span><span class="na">getReplyString</span><span class="o">());</span>
                    <span class="c1">// close the FileInputStream</span>
                    <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"FileInputStream closed."</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>

        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">FTPConnectionClosedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">ftp</span><span class="o">.</span><span class="na">isConnected</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Disconnecting."</span><span class="o">);</span>
                    <span class="n">ftp</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
                    <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">"Disconnected."</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">WARNING</span><span class="o">,</span> <span class="s">"IOException on disconnect."</span><span class="o">);</span>
                <span class="n">log</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">WARNING</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">reply</span> <span class="o">==</span> <span class="mi">226</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Here is an example of how to use it.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">javanetwork</span><span class="o">.</span><span class="na">net</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.NoArgsConstructor</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.commons.net.ftp.FTP</span><span class="o">;</span>

<span class="nd">@NoArgsConstructor</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FTPExample</span> <span class="o">{</span>

    <span class="cm">/**
     * @param args the command line arguments
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">FTPTransfer</span> <span class="n">ft</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FTPTransfer</span><span class="o">();</span>
        <span class="nc">File</span><span class="o">[]</span> <span class="n">nf</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
        <span class="n">nf</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"java.png"</span><span class="o">);</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setFiles</span><span class="o">(</span><span class="n">nf</span><span class="o">);</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setFileType</span><span class="o">(</span><span class="no">FTP</span><span class="o">.</span><span class="na">BINARY_FILE_TYPE</span><span class="o">);</span> <span class="c1">// The Default is FTP.ASCII</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setHostname</span><span class="o">(</span><span class="s">"speedtest.tele2.net"</span><span class="o">);</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">"anonymous"</span><span class="o">);</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">"anonymous"</span><span class="o">);</span>
        <span class="n">ft</span><span class="o">.</span><span class="na">setTargetDirectory</span><span class="o">(</span><span class="s">"/upload"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ft</span><span class="o">.</span><span class="na">transferFiles</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>It is interesting that this code is originally from 2004. The FTP host http://speedtest.tele2.net allows anonymous connections for testing upload and download speeds. A great feature is that it has downloadable files of various sizes for testing.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Convert Server Certificate and Key into PKCS#12, and Java Keystore (JKS)</title>
	  <link>//2020-03-13-import-pkcs12-keystore.html</link>
	  <author></author>
	  <pubDate>2020-03-13T12:00:00+00:00</pubDate>
	  <guid>//2020-03-13-import-pkcs12-keystore.html</guid>
	  <description><![CDATA[
	     <p>I was looking for simple instructions on how to convert a certificate to a keystore. Here is my simplified version.</p>

<ol>
  <li>Build the certificate chain into a single file.
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat </span>server.pem intermediate.pem root.pem <span class="o">&gt;</span> import.pem
</code></pre></div>    </div>
  </li>
  <li>Convert the private key and merged certificate files into a PKCS12 file.
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl pkcs12 <span class="nt">-export</span> <span class="nt">-in</span> import.pem <span class="nt">-inkey</span> server.key <span class="nt">-name</span> serverHostName <span class="o">&gt;</span> server.p12
</code></pre></div>    </div>
  </li>
  <li>
    <p>Import the PKCS12 file into Java Keystore (JKS).</p>

    <p><strong>Note:</strong> Java 9 changed the default Java Keystore to PKCS#12. The following is only required for Java 8, or applications that have JKS dependency. See <a href="http://openjdk.java.net/jeps/229">JEP 229: Create PKCS12 Keystores by Default</a></p>
  </li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>keytool <span class="nt">-importkeystore</span> <span class="nt">-srckeystore</span> server.p12 <span class="nt">-destkeystore</span> keystore.jks <span class="nt">-srcstoretype</span> pkcs12 <span class="nt">-alias</span> serverHostName 
</code></pre></div></div>

<h2 id="notes">Notes</h2>

<p>If you are using PKCS#12 as your keystore, edit the <code class="highlighter-rouge">JAVA_HOME/jre/lib/security/java.security</code> file and change the default keystore type as shown below:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Default keystore type.
keystore.type=pkcs12
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>Programming Merit Badge</title>
	  <link>//2019-11-09-programming-merit-badge.html</link>
	  <author></author>
	  <pubDate>2019-11-09T00:00:00+00:00</pubDate>
	  <guid>//2019-11-09-programming-merit-badge.html</guid>
	  <description><![CDATA[
	     <h2 id="the-next-generation-of-developers">The Next Generation of Developers</h2>

<p>This is the 4th year I have taught the Programming Merit Badge to Boy Scouts in the Southbounder District of the Blue Ridge Council in Greenville, SC. I consider it quite an honor to be asked to do it for this many years. The Boy Scout program was instrumental in my development as a boy. This has been my way of paying it forward to the next generation. My oldest son is an Eagle Scout, and my youngest is well into his journey at this point.</p>

<p>I have been a Boy Scout Assistant Scout Master, Unit Commissioner, Roundtable Commissioner, Cub Master, and a Den Leader. The most fulfilling part of my Scouting experience as an adult was Cub Master. I still think I am a 9 year old boy at heart. If you have not considered working with kids whether in Scouting, or another youth program, give it a chance. You will feel rewarded and humbled by the experience. I think I have learned more from the scouts than I have taught them.</p>

<h2 id="programming-merit-badge">Programming Merit Badge</h2>

<p>There are key elements that must be completed, and these will change over time as the program evolves. They broadly include safety, history, general knowledge, and coding. A key element that must be completed for all the participants is the Boy Scout Cyber Chip. At the time of this writing, it must be renewed yearly, and covers different age groups.</p>

<h3 id="safety">Safety</h3>

<p>This topic can be exciting if you can make a connection with the scouts on the topic. I am a gamer, so I am guilty of doing a lot of bad things with regards to ergomonics while playing games. When I relate my experiences, I get instant feedback of “Wow… me too!” Building that sense of espirit de corps with the scouts makes a tough topic interesting. They also become curious about what games I play. I also make mods for games which helps me to relate with them.</p>

<h3 id="history">History</h3>

<p>We can’t talk about where we are without knowing where we have been. I enjoy this section, and the scouts and parents who are present seem to enjoy it as well. I think my side bars about various items like the story of Grace Hopper and computer bugs make them laugh. If you don’t know the story, do a quick search on Google.</p>

<h3 id="general-knowledge">General Knowledge</h3>

<p>I talk about the languages and usage with examples. The legal section on copyrights, patents, trademarks, and trade secrets (though really important) is one section that causes obvious glaze on their faces. Thankfully, I have a really cool career to get them talking: cryptanalyist.</p>

<h3 id="code">Code</h3>

<p>This is what the scouts are here to learn. I talk about some basics of how to code with tools like <code class="highlighter-rouge">notepad</code>, a terminal, and <code class="highlighter-rouge">javac</code>. I show them some of the pitfalls of this approach. It does not take a lot of effort to prove this point. Then I show them how to use the <a href="https://netbeans.apache.org/">Apache Netbeans IDE</a> to do development. If you are teaching programming, the clear choice is <a href="https://netbeans.apache.org/">Apache Netbeans IDE</a> for development. The hurdles to learning to use it are minimal. The scouts caught on quickly, and the few shortcut keys I taught them were used in earnest.</p>

<p>My goal was to teach them to code beyond the basic “Hello World!”. I have an example on how to calculate where <code class="highlighter-rouge">x</code> crosses the <code class="highlighter-rouge">x-axis</code> using the equation of a line: <script type="math/tex">y=mx+b</script></p>

<h2 id="references">References</h2>

<ol>
  <li><a href="https://www.dropbox.com/s/si8knmvagx73e98/Programming%20Merit%20Badge%20-%20Module%201%20-%20Safety.pptx?dl=0">Programming Merit Badge - Module 1 - Safety</a></li>
  <li><a href="https://www.dropbox.com/s/njle8szc42fhx6q/Programming%20Merit%20Badge%20-%20Module%202%20-%20History.pptx?dl=0">Programming Merit Badge - Module 2 - History</a></li>
  <li><a href="https://www.dropbox.com/s/732eprnflk56x8o/Programming%20Merit%20Badge%20-%20Module%203%20-%20General%20Knowledge.pptx?dl=0">Programming Merit Badge - Module 3 - General Knowledge</a></li>
  <li><a href="https://www.dropbox.com/s/p451sp1ey4teroo/Programming%20Merit%20Badge%20-%20Module%204%20-%20Code.pptx?dl=0">Programming Merit Badge - Module 4 - Code</a></li>
</ol>

	  ]]></description>
	</item>

	<item>
	  <title>Multiple Java Persistence API (JPA) persistence.xml Merging</title>
	  <link>//2019-10-15-multiple-java-persistence-api-jpa-persistence-xml-merging.html</link>
	  <author></author>
	  <pubDate>2019-10-15T15:50:47+00:00</pubDate>
	  <guid>//2019-10-15-multiple-java-persistence-api-jpa-persistence-xml-merging.html</guid>
	  <description><![CDATA[
	     <h2 id="introduction">Introduction</h2>

<p>Java Persistence API (JPA) is a great technology for combining the power of Java and data persistence. The specification goes a long way from the days of using EJB 1.0 for data management, but still comes with some limitations. One of them is using multiple jars that may contain <em>persistence.xml</em> files. The current limitation is that the first <em>persistence.xml</em> file that is found, is loaded by the <code class="highlighter-rouge">Classloader</code>, and the others are ignored.</p>

<p>The code below is used to get around this limitation by proxying the <code class="highlighter-rouge">Classloader</code>, scanning the jars for <em>persistence.xml</em> files and combining them into one file for the <code class="highlighter-rouge">Classloader</code> to load.</p>

<p>The original idea came from Fabrizio Giudici so I can not claim this as my own. The code below is based on his great work. My enhancements to his code are removal of duplicate classes that may be included in the multiple <em>persistence.xml</em> files, and the use of a Random Access Memory (RAM) file system to merge the files.</p>

<h1 id="code">Code</h1>

<p>The code will work on Java 8, but the changes in later versions of Java around class loading may prevent us from using this clever trick.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">.</span><span class="na">persistence</span><span class="o">;</span>
    
    <span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.io.StringWriter</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.nio.charset.Charset</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.text.MessageFormat</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.util.Enumeration</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.util.Iterator</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.parsers.ParserConfigurationException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.Transformer</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.TransformerConfigurationException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.TransformerException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.TransformerFactory</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.dom.DOMSource</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.transform.stream.StreamResult</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.xpath.XPath</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathConstants</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathExpression</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathExpressionException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">javax.xml.xpath.XPathFactory</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.io.IOUtils</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.vfs2.FileObject</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.vfs2.FileSystemException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.vfs2.FileSystemManager</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.vfs2.VFS</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.log4j.Logger</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.w3c.dom.Node</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.w3c.dom.NodeList</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.xml.sax.SAXException</span><span class="o">;</span>
    
    <span class="cm">/**
     * @author Fabrizio Giudici
     * @author John Yeary &lt;jyeary@bluelotussoftware.com&gt;
     * @version 1.0.0
     */</span>
    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">PersistenceClassLoader</span> <span class="kd">extends</span> <span class="nc">ClassLoader</span> <span class="o">{</span>
    
        <span class="kd">private</span> <span class="kd">final</span> <span class="nc">ClassLoader</span> <span class="n">parent</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="no">LOGGER</span> <span class="o">=</span> <span class="nc">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">PersistenceClassLoader</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">DocumentBuilderFactory</span> <span class="no">DOCUMENT_BUILDER_FACTORY</span> <span class="o">=</span> <span class="nc">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">XPathFactory</span> <span class="no">XPATH_FACTORY</span> <span class="o">=</span> <span class="nc">XPathFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">XPath</span> <span class="no">XPATH</span> <span class="o">=</span> <span class="no">XPATH_FACTORY</span><span class="o">.</span><span class="na">newXPath</span><span class="o">();</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">XPathExpression</span> <span class="no">XPATH_ENTITY_PU_NODE</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">XPathExpression</span> <span class="no">XPATH_PROPERTIES_NODE</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">XPathExpression</span> <span class="no">XPATH_ENTITY_CLASS_TEXT</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">PERSISTENCE_XML</span> <span class="o">=</span> <span class="s">"META-INF/persistence.xml"</span><span class="o">;</span>
        <span class="kd">private</span> <span class="no">URL</span> <span class="n">mergedPersistenceXml</span><span class="o">;</span>
    
        <span class="kd">static</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="no">XPATH_ENTITY_PU_NODE</span> <span class="o">=</span> <span class="no">XPATH</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"//persistence/persistence-unit"</span><span class="o">);</span>
                <span class="no">XPATH_PROPERTIES_NODE</span> <span class="o">=</span> <span class="no">XPATH</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"//persistence/persistence-unit/properties"</span><span class="o">);</span>
                <span class="no">XPATH_ENTITY_CLASS_TEXT</span> <span class="o">=</span> <span class="no">XPATH</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">"//persistence/persistence-unit/class/text()"</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">XPathExpressionException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ExceptionInInitializerError</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * Constructor that wraps the provided {@link ClassLoader}
         *
         * @param parent The parent {@link ClassLoader} to wrap.
         */</span>
        <span class="kd">public</span> <span class="nf">PersistenceClassLoader</span><span class="o">(</span><span class="kd">final</span> <span class="nc">ClassLoader</span> <span class="n">parent</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">(</span><span class="n">parent</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">parent</span> <span class="o">=</span> <span class="n">parent</span><span class="o">;</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * {@inheritDoc}
         * &lt;p&gt;
         * This handles setting the {@literal persistence.xml} from multiple {@literal META-INF/persistence.xml} files using
         * the same persistence unit.&lt;/p&gt;
         */</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">Enumeration</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;</span> <span class="nf">getResources</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="no">PERSISTENCE_XML</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">name</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">mergedPersistenceXml</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">try</span> <span class="o">{</span>
                        <span class="nc">String</span> <span class="n">merged</span> <span class="o">=</span> <span class="n">scanPersistenceXML</span><span class="o">();</span>
                        <span class="no">LOGGER</span><span class="o">.</span><span class="na">trace</span><span class="o">(</span><span class="n">merged</span><span class="o">);</span>
                        <span class="n">mergedPersistenceXml</span> <span class="o">=</span> <span class="n">getMergedURL</span><span class="o">(</span><span class="n">merged</span><span class="o">);</span>
                        <span class="no">LOGGER</span><span class="o">.</span><span class="na">trace</span><span class="o">(</span><span class="nc">MessageFormat</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"Merged persistence.xml URL: {0}"</span><span class="o">,</span> <span class="n">mergedPersistenceXml</span><span class="o">));</span>
                    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="o">|</span> <span class="nc">ParserConfigurationException</span> <span class="o">|</span> <span class="nc">SAXException</span> <span class="o">|</span> <span class="nc">XPathExpressionException</span> <span class="o">|</span> <span class="nc">TransformerException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">//TODO Need to return the first persistence.xml file, or throw a new exception. This should be fatal.</span>
                        <span class="no">LOGGER</span><span class="o">.</span><span class="na">fatal</span><span class="o">(</span><span class="s">"Could not merge persistence.xml files"</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
                        <span class="k">return</span> <span class="n">parent</span><span class="o">.</span><span class="na">getResources</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="k">new</span> <span class="nc">Enumeration</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;()</span> <span class="o">{</span>
                    <span class="no">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="n">mergedPersistenceXml</span><span class="o">;</span>
    
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasMoreElements</span><span class="o">()</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="n">url</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">;</span>
                    <span class="o">}</span>
    
                    <span class="nd">@Override</span>
                    <span class="kd">public</span> <span class="no">URL</span> <span class="nf">nextElement</span><span class="o">()</span> <span class="o">{</span>
                        <span class="kd">final</span> <span class="no">URL</span> <span class="n">url2</span> <span class="o">=</span> <span class="n">url</span><span class="o">;</span>
                        <span class="n">url</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                        <span class="k">return</span> <span class="n">url2</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">};</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getResources</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * Scans the {@link ClassLoader#getResources(java.lang.String)} for {@literal persistence.xml} files.
         *
         * @return A {@code Collection&lt;URL} of {@literal persistence.xml} URLs.
         * @throws IOException If an exception occurs during processing.
         */</span>
        <span class="kd">public</span> <span class="nc">Collection</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;</span> <span class="nf">findPersistenceXMLs</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
            <span class="kd">final</span> <span class="nc">Enumeration</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;</span> <span class="n">e</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">getResources</span><span class="o">(</span><span class="no">PERSISTENCE_XML</span><span class="o">);</span>
            <span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">list</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * Converts a {@link Document} to a {@code String}.
         *
         * @param document The document to convert.
         * @return A {@code String} representation of the document if the conversion was successful, and {@literal null}
         * otherwise.
         */</span>
        <span class="kd">private</span> <span class="nc">String</span> <span class="nf">documentToString</span><span class="o">(</span><span class="kd">final</span> <span class="nc">Document</span> <span class="n">document</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">DOMSource</span> <span class="n">source</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DOMSource</span><span class="o">(</span><span class="n">document</span><span class="o">);</span>
                <span class="nc">StringWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringWriter</span><span class="o">();</span>
                <span class="nc">StreamResult</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StreamResult</span><span class="o">(</span><span class="n">writer</span><span class="o">);</span>
                <span class="nc">TransformerFactory</span> <span class="n">tf</span> <span class="o">=</span> <span class="nc">TransformerFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
                <span class="nc">Transformer</span> <span class="n">transformer</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="na">newTransformer</span><span class="o">();</span>
                <span class="n">transformer</span><span class="o">.</span><span class="na">transform</span><span class="o">(</span><span class="n">source</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
                <span class="k">return</span> <span class="n">writer</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">TransformerException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">LOGGER</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Could not convert Document to String"</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * This method creates the merged {@literal persistence.xml} file from all of {@literal persistence.xml} files found
         * by the {@link ClassLoader} during its scan and constructs a {@link Document} containing the merged
         * {@literal &lt;class&gt;} elements.
         *
         * @return A {@code String} representation of the {@link Document} that was generated.
         */</span>
        <span class="kd">private</span> <span class="nc">String</span> <span class="nf">scanPersistenceXML</span><span class="o">()</span>
                <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span>
                <span class="nc">ParserConfigurationException</span><span class="o">,</span>
                <span class="nc">SAXException</span><span class="o">,</span>
                <span class="nc">XPathExpressionException</span><span class="o">,</span>
                <span class="nc">TransformerConfigurationException</span><span class="o">,</span>
                <span class="nc">TransformerException</span> <span class="o">{</span>
            <span class="no">LOGGER</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"scanPersistenceXML()"</span><span class="o">);</span>
            <span class="kd">final</span> <span class="nc">DocumentBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="no">DOCUMENT_BUILDER_FACTORY</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
            <span class="no">DOCUMENT_BUILDER_FACTORY</span><span class="o">.</span><span class="na">setNamespaceAware</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
            <span class="nc">Collection</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;</span> <span class="n">persistenceXMlUrls</span> <span class="o">=</span> <span class="n">findPersistenceXMLs</span><span class="o">();</span>
    
            <span class="nc">Iterator</span><span class="o">&lt;</span><span class="no">URL</span><span class="o">&gt;</span> <span class="n">it</span> <span class="o">=</span> <span class="n">persistenceXMlUrls</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>
            <span class="kd">final</span> <span class="no">URL</span> <span class="n">masterURL</span> <span class="o">=</span> <span class="n">it</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="n">it</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>
    
            <span class="no">LOGGER</span><span class="o">.</span><span class="na">trace</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"&gt;&gt;&gt;&gt; master persistence.xml: %s"</span><span class="o">,</span> <span class="n">masterURL</span><span class="o">));</span>
            <span class="kd">final</span> <span class="nc">Document</span> <span class="n">masterDocument</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">masterURL</span><span class="o">.</span><span class="na">toExternalForm</span><span class="o">());</span>
            <span class="kd">final</span> <span class="nc">Node</span> <span class="n">puNode</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Node</span><span class="o">)</span> <span class="no">XPATH_ENTITY_PU_NODE</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODE</span><span class="o">);</span>
            <span class="kd">final</span> <span class="nc">Node</span> <span class="n">propertiesNode</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Node</span><span class="o">)</span> <span class="no">XPATH_PROPERTIES_NODE</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODE</span><span class="o">);</span>
    
            <span class="k">for</span> <span class="o">(</span><span class="kd">final</span> <span class="no">URL</span> <span class="n">url</span> <span class="o">:</span> <span class="n">persistenceXMlUrls</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">LOGGER</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"&gt;&gt;&gt;&gt; other persistence.xml: %s"</span><span class="o">,</span> <span class="n">url</span><span class="o">));</span>
                <span class="kd">final</span> <span class="nc">Document</span> <span class="n">document</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">toExternalForm</span><span class="o">());</span>
                <span class="kd">final</span> <span class="nc">NodeList</span> <span class="n">nodes</span> <span class="o">=</span> <span class="o">(</span><span class="nc">NodeList</span><span class="o">)</span> <span class="no">XPATH_ENTITY_CLASS_TEXT</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">document</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODESET</span><span class="o">);</span>
    
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">nodes</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="kd">final</span> <span class="nc">String</span> <span class="n">entityClassName</span> <span class="o">=</span> <span class="n">nodes</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">();</span>
    
                    <span class="cm">/*
                     * Check for duplicates and only add new classes.
                     */</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">classNodeExists</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">,</span> <span class="n">entityClassName</span><span class="o">))</span> <span class="o">{</span>
                        <span class="no">LOGGER</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; entity class: %s found. Adding to persistence.xml"</span><span class="o">,</span> <span class="n">entityClassName</span><span class="o">));</span>
    
                        <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                            <span class="n">puNode</span><span class="o">.</span><span class="na">insertBefore</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">.</span><span class="na">createComment</span><span class="o">(</span><span class="s">" from "</span> <span class="o">+</span> <span class="n">url</span><span class="o">.</span><span class="na">toExternalForm</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">),</span> <span class="n">propertiesNode</span><span class="o">);</span>
                            <span class="n">puNode</span><span class="o">.</span><span class="na">insertBefore</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="s">"\n"</span><span class="o">),</span> <span class="n">propertiesNode</span><span class="o">);</span>
                        <span class="o">}</span>
                        <span class="kd">final</span> <span class="nc">Node</span> <span class="n">child</span> <span class="o">=</span> <span class="n">masterDocument</span><span class="o">.</span><span class="na">createElement</span><span class="o">(</span><span class="s">"class"</span><span class="o">);</span>
                        <span class="n">child</span><span class="o">.</span><span class="na">appendChild</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="n">entityClassName</span><span class="o">));</span>
                        <span class="c1">// The entity classes must be appended before the properties to successfully validate.</span>
                        <span class="n">puNode</span><span class="o">.</span><span class="na">insertBefore</span><span class="o">(</span><span class="n">child</span><span class="o">,</span> <span class="n">propertiesNode</span><span class="o">);</span>
                        <span class="n">puNode</span><span class="o">.</span><span class="na">insertBefore</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">.</span><span class="na">createTextNode</span><span class="o">(</span><span class="s">"\n"</span><span class="o">),</span> <span class="n">propertiesNode</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
    
            <span class="k">return</span> <span class="nf">documentToString</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">);</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * &lt;p&gt;
         * This method will provide a {@link URL} to a virtual file stored in Random Access Memory (RAM) using
         * {@link FileSystemManager}.The method is sufficiently abstract to store any {@code String} data.&lt;/p&gt;
         * &lt;p&gt;
         * The implementation in this class will be used to store our merged persistence.xml files. This way we can avoid
         * storing the merged file on the operating system.&lt;/p&gt;
         *
         * @param data The data to be stored to a virtual file in RAM.
         * @return The {@link URL} to the virtual file in RAM.
         */</span>
        <span class="kd">private</span> <span class="no">URL</span> <span class="nf">getMergedURL</span><span class="o">(</span><span class="kd">final</span> <span class="nc">String</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">FileSystemManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="no">VFS</span><span class="o">.</span><span class="na">getManager</span><span class="o">();</span>
                <span class="c1">// The EntityManagerFactory will scan a pattern like PROJECT_NAME/META-INF/ for persistence.xml file.</span>
                <span class="nc">FileObject</span> <span class="n">pxml</span> <span class="o">=</span> <span class="n">manager</span><span class="o">.</span><span class="na">resolveFile</span><span class="o">(</span><span class="s">"ram://RAM_MERGED_PERSISTENCE/META-INF/persistence.xml"</span><span class="o">);</span>
                <span class="n">pxml</span><span class="o">.</span><span class="na">createFile</span><span class="o">();</span>
                <span class="k">try</span> <span class="o">(</span><span class="nc">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">pxml</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">getOutputStream</span><span class="o">())</span> <span class="o">{</span>
                    <span class="nc">IOUtils</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">os</span><span class="o">,</span> <span class="nc">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">));</span>
                <span class="o">}</span>
                <span class="k">try</span> <span class="o">(</span><span class="nc">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">pxml</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">getInputStream</span><span class="o">())</span> <span class="o">{</span>
                    <span class="no">LOGGER</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="nc">IOUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="nc">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">)));</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="n">pxml</span><span class="o">.</span><span class="na">getURL</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">FileSystemException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">LOGGER</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Could not create RAM filesystem."</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">LOGGER</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"An exception occurred while trying to generate merged URL"</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="cm">/**
         * This checks the provided master {@literal persistence.xml} {@link Document} for the existence of a class node.
         *
         * @param masterDocument The document to evaluate.
         * @param className The name of class to check to see if it already exists.
         * @return {@literal true} if the class already exists and {@literal false} otherwise.
         */</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">classNodeExists</span><span class="o">(</span><span class="nc">Document</span> <span class="n">masterDocument</span><span class="o">,</span> <span class="nc">String</span> <span class="n">className</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="kd">final</span> <span class="nc">NodeList</span> <span class="n">nodeList</span><span class="o">;</span>
    
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">nodeList</span> <span class="o">=</span> <span class="o">(</span><span class="nc">NodeList</span><span class="o">)</span> <span class="no">XPATH_ENTITY_CLASS_TEXT</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="n">masterDocument</span><span class="o">,</span> <span class="nc">XPathConstants</span><span class="o">.</span><span class="na">NODESET</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">XPathExpressionException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">LOGGER</span><span class="o">.</span><span class="na">warn</span><span class="o">(</span><span class="s">"The provided persistence.xml contains no class entries"</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
    
            <span class="nc">String</span> <span class="n">masterEntityClassName</span><span class="o">;</span>
    
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">nodeList</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">masterEntityClassName</span> <span class="o">=</span> <span class="n">nodeList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">masterEntityClassName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">className</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">result</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
        <span class="o">}</span>
    
    <span class="o">}</span>
</code></pre></div></div>

<p>The implementation is simply a matter of doing a switch on the <code class="highlighter-rouge">ClassLoader</code> as shown below.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    
            <span class="nc">ClassLoader</span> <span class="n">contextClassLoader</span> <span class="o">=</span> <span class="nc">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">getContextClassLoader</span><span class="o">();</span>
            <span class="nc">PersistenceClassLoader</span> <span class="n">cl</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PersistenceClassLoader</span><span class="o">(</span><span class="n">contextClassLoader</span><span class="o">);</span>
    
            <span class="c1">// We must set the Classloader to use our loader BEFORE calling Persistence.Persistence.createEntityManagerFactory()</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">setContextClassLoader</span><span class="o">(</span><span class="n">cl</span><span class="o">);</span>
    
            <span class="nc">EntityManagerFactory</span> <span class="n">entityManagerFactory</span> <span class="o">=</span> <span class="nc">Persistence</span><span class="o">.</span><span class="na">createEntityManagerFactory</span><span class="o">(</span><span class="s">"example-pu"</span><span class="o">);</span>
    
            <span class="c1">//Reset the classloader</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">setContextClassLoader</span><span class="o">(</span><span class="n">contextClassLoader</span><span class="o">);</span>
    
            <span class="nc">EntityManager</span> <span class="n">em</span> <span class="o">=</span> <span class="n">entityManagerFactory</span><span class="o">.</span><span class="na">createEntityManager</span><span class="o">();</span>
    
            <span class="o">...</span>
        <span class="o">}</span>
</code></pre></div></div>
<h1 id="conclusion">Conclusion</h1>

<p>The Java Persistence API (JPA) is a great technology, but has some limitations with regards to loading multiple <em>persistence.xml</em> files. We can use <code class="highlighter-rouge">Classloader</code> magic to accomplish loading multiple <em>persistence.xml</em> files.</p>

<p>This code may not work as expected on later versions of Java. At the time of this writing, Java 8 is still used by most of the enterprise clients I work with.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Simplifying Command Line Processing</title>
	  <link>//2018-11-09-simplifying-command-line-processing.html</link>
	  <author></author>
	  <pubDate>2018-11-09T19:59:47+00:00</pubDate>
	  <guid>//2018-11-09-simplifying-command-line-processing.html</guid>
	  <description><![CDATA[
	     <h2 id="introduction">Introduction</h2>

<p>I like many of you have spent many hours using <a href="https://commons.apache.org/proper/commons-cli/">Apache Commons CLI</a> to create command line options. It does a great job. As the number of options, or groups increases, the framework begins to show its rough edges. A tool called <a href="http://jcommander.org/">JCommander</a> which I mentioned in my post <a href="https://blog.johnyeary.com/2018/09/useful-java-frameworks/">Useful Java Frameworks</a> really begins to shine. I will present two versions of the same command line processing, and let you decide.</p>

<h2 id="clijava">CLI.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">.</span><span class="na">cli</span><span class="o">;</span>
    
    <span class="kn">import</span> <span class="nn">java.util.logging.Level</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">java.util.logging.Logger</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.AlreadySelectedException</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.CommandLine</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.CommandLineParser</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.DefaultParser</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.HelpFormatter</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.Option</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.OptionGroup</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.Options</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.apache.commons.cli.ParseException</span><span class="o">;</span>
    
    <span class="cm">/**
     *
     * @author &lt;a href="mailto:jyeary@bluelotussoftware.com"&gt;John Yeary&lt;/a&gt;
     * @version 1.0.0
     */</span>
    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">CLI</span> <span class="o">{</span>
    
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Options</span> <span class="no">OPTIONS</span><span class="o">;</span>
    
        <span class="kd">static</span> <span class="o">{</span>
            <span class="no">OPTIONS</span> <span class="o">=</span> <span class="no">CLI</span><span class="o">.</span><span class="na">createOptions</span><span class="o">();</span>
        <span class="o">}</span>
    
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    
            <span class="nc">CommandLineParser</span> <span class="n">commandLineParser</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DefaultParser</span><span class="o">();</span>
    
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">CommandLine</span> <span class="n">cmd</span> <span class="o">=</span> <span class="n">commandLineParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="no">OPTIONS</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    
                <span class="k">if</span> <span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">getOptions</span><span class="o">().</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="no">CLI</span><span class="o">.</span><span class="na">help</span><span class="o">();</span>
                    <span class="k">return</span><span class="o">;</span>
                <span class="o">}</span>
    
                <span class="k">if</span> <span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="sc">'v'</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Product Version: 1.0.0"</span><span class="o">);</span>
                <span class="o">}</span>
    
                <span class="k">if</span><span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="sc">'i'</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Starting interactive mode."</span><span class="o">);</span>
                <span class="o">}</span>
    
                <span class="k">if</span><span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">"start"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Starting application"</span><span class="o">);</span>
                <span class="o">}</span>
    
                <span class="k">if</span><span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">"stop"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Stopping application"</span><span class="o">);</span>
                <span class="o">}</span>
    
    
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">AlreadySelectedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">CLI</span><span class="o">.</span><span class="na">help</span><span class="o">();</span>
                <span class="nc">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="no">CLI</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">ParseException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">CLI</span><span class="o">.</span><span class="na">help</span><span class="o">();</span>
                <span class="nc">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="no">CLI</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">log</span><span class="o">(</span><span class="nc">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    
        <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">help</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">HelpFormatter</span> <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HelpFormatter</span><span class="o">();</span>
            <span class="n">formatter</span><span class="o">.</span><span class="na">printHelp</span><span class="o">(</span><span class="s">"CLI"</span><span class="o">,</span> <span class="no">OPTIONS</span><span class="o">);</span>
        <span class="o">}</span>
    
        <span class="kd">private</span> <span class="kd">static</span> <span class="nc">Options</span> <span class="nf">createOptions</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Options</span> <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Options</span><span class="o">();</span>
    
            <span class="nc">OptionGroup</span> <span class="n">mode</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">OptionGroup</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">help</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Option</span><span class="o">(</span><span class="s">"help"</span><span class="o">,</span> <span class="s">"Help"</span><span class="o">);</span>
    
            <span class="nc">Option</span> <span class="n">interactive</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">"i"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"interactive"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"Starts the processor in interactive mode."</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"start"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"Start the application."</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">stop</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"stop"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"Stop the application."</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">properties</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">"p"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"properties"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"List all properties"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">quit</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">"q"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"quit"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"Quit the application."</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="nc">Option</span> <span class="n">version</span> <span class="o">=</span> <span class="nc">Option</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">"v"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">longOpt</span><span class="o">(</span><span class="s">"version"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">desc</span><span class="o">(</span><span class="s">"The current version of the application."</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    
            <span class="n">mode</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">interactive</span><span class="o">);</span>
            <span class="n">mode</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">start</span><span class="o">);</span>
            <span class="n">mode</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">stop</span><span class="o">);</span>
    
            <span class="n">options</span><span class="o">.</span><span class="na">addOptionGroup</span><span class="o">(</span><span class="n">mode</span><span class="o">);</span>
            <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">help</span><span class="o">);</span>
            <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">properties</span><span class="o">);</span>
            <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">quit</span><span class="o">);</span>
            <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">version</span><span class="o">);</span>
    
            <span class="k">return</span> <span class="n">options</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>usage: CLI
 -help              Help
 -i,--interactive   Starts the processor in interactive mode.
 -p,--properties    List all properties
 -q,--quit          Quit the application.
    --start         Start the application.
    --stop          Stop the application.
 -v,--version       The current version of the application.
</code></pre></div></div>

<h2 id="jcommanderclijava">JCommanderCLI.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">.</span><span class="na">cli</span><span class="o">;</span>
    
    <span class="kn">import</span> <span class="nn">com.beust.jcommander.JCommander</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">com.beust.jcommander.Parameter</span><span class="o">;</span>
    
    <span class="cm">/**
     *
     * @author &lt;a href="mailto:jyeary@bluelotussoftware.com"&gt;John Yeary&lt;/a&gt;
     * @version 1.0.0
     */</span>
    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">JCommanderCLI</span> <span class="o">{</span>
    
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="o">{</span><span class="s">"-v"</span><span class="o">,</span> <span class="s">"--version"</span><span class="o">},</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"The current version of the application."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">version</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="o">{</span><span class="s">"-h"</span><span class="o">,</span> <span class="s">"--help"</span><span class="o">},</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Provides help to the user."</span><span class="o">,</span> <span class="n">help</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">help</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="o">{</span><span class="s">"-q"</span><span class="o">,</span> <span class="s">"--quit"</span><span class="o">},</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Quit the application."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">quit</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="o">{</span><span class="s">"-i"</span><span class="o">,</span> <span class="s">"--interactive"</span><span class="o">},</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Starts the processor in interactive mode."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">interactive</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="s">"--start"</span><span class="o">,</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Start the application."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">start</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="s">"--stop"</span><span class="o">,</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"Stop the application."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">stop</span><span class="o">;</span>
        <span class="nd">@Parameter</span><span class="o">(</span><span class="n">names</span> <span class="o">=</span> <span class="o">{</span><span class="s">"-p"</span><span class="o">,</span> <span class="s">"--properties"</span><span class="o">},</span> <span class="n">description</span> <span class="o">=</span> <span class="s">"List all of the configured properties."</span><span class="o">)</span>
        <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">props</span><span class="o">;</span>
    
        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    
            <span class="nc">JCommanderCLI</span> <span class="n">clic</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JCommanderCLI</span><span class="o">();</span>
            <span class="nc">JCommander</span> <span class="n">jc</span> <span class="o">=</span> <span class="nc">JCommander</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">addObject</span><span class="o">(</span><span class="n">clic</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
            <span class="n">jc</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
            <span class="n">jc</span><span class="o">.</span><span class="na">setProgramName</span><span class="o">(</span><span class="nc">JCommanderCLI</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">());</span>
    
            <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">jc</span><span class="o">.</span><span class="na">usage</span><span class="o">();</span>
                <span class="k">return</span><span class="o">;</span>
            <span class="o">}</span>
    
            <span class="n">clic</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
        <span class="o">}</span>
    
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
    
            <span class="k">if</span> <span class="o">(</span><span class="n">version</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"CLICommander version 1.0.0"</span><span class="o">);</span>
            <span class="o">}</span>
    
            <span class="k">if</span> <span class="o">(</span><span class="n">interactive</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Starting interactive mode."</span><span class="o">);</span>
            <span class="o">}</span>
    
            <span class="k">if</span> <span class="o">(</span><span class="n">start</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Starting application"</span><span class="o">);</span>
            <span class="o">}</span>
    
            <span class="k">if</span> <span class="o">(</span><span class="n">stop</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Stopping application"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Usage: com.bluelotussoftware.cli.JCommanderCLI [options]
  Options:
    -h, --help
      Provides help to the user.
    -i, --interactive
      Starts the processor in interactive mode.
      Default: false
    -p, --properties
      List all of the configured properties.
      Default: false
    -q, --quit
      Quit the application.
      Default: false
    --start
      Start the application.
      Default: false
    --stop
      Stop the application.
      Default: false
    -v, --version
      The current version of the application.
      Default: false
</code></pre></div></div>

<h2 id="results">Results</h2>

<p>If you have come to the same conclusion as me, then you may want to simply include JCommander in your next development project. If you are already invested in Commons CLI, you can spend the time to convert it, but don’t waste time if you are not encountering issues.</p>

<p>The Maven dependency can be found here:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;dependency&gt;
  &lt;groupId&gt;com.beust&lt;/groupId&gt;
  &lt;artifactId&gt;jcommander&lt;/artifactId&gt;
  &lt;version&gt;1.72&lt;/version&gt;
&lt;/dependency&gt;
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>JAX-WS on Tomcat</title>
	  <link>//2018-11-09-jax-ws-on-tomcat.html</link>
	  <author></author>
	  <pubDate>2018-11-09T11:18:37+00:00</pubDate>
	  <guid>//2018-11-09-jax-ws-on-tomcat.html</guid>
	  <description><![CDATA[
	     <h3 id="introduction">Introduction</h3>

<p>I was recently tasked with looking into an issue on Embedded Apache Tomcat 8 where a JAX-WS service was installed. It looks like the services were originally written for Java 5 and JAX-WS 2.1. Before making any changes to the existing implementation, I wanted to check on the latest versions and see what might be different and cause a conflict. I know that the JRE includes later versions of JAX-WS and thought that might be the source of the issue. It turns out that it was not. It was something completely different. However, the exploration into how to make JAX-WS work on Embedded Apache Tomcat 8 was still worth publishing.</p>

<h3 id="embedded-tomcat">Embedded Tomcat</h3>

<p>I have a number of projects on Github for Apache Tomcat. They can be found in the list below:</p>
<ul>
  <li><a href="https://github.com/jyeary/tomcat-8-jaxws">tomcat-8-jaxws</a> - This example.</li>
  <li><a href="https://github.com/jyeary/tomcat-8-embedded">tomcat-8-embedded</a></li>
  <li><a href="https://github.com/jyeary/tomcat-9-embedded">tomcat-9-embedded</a></li>
  <li><a href="https://github.com/bluelotussoftware/tomcat-security-valves">tomcat-security-valves</a> - If you are using embedded Tomcat and you want to be secure, you should look at these valves. They are also published on Maven Central and available in Maven.</li>
</ul>

<p>The code for our example using JAX-WS will be using a war file with a simple JAX-WS service that returns the current date.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">.</span><span class="na">tomcat</span><span class="o">.</span><span class="na">embedded</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.catalina.Host</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.catalina.LifecycleException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.catalina.startup.Tomcat</span><span class="o">;</span>

<span class="cm">/**
 * An Example Embedded Apache Tomcat with an JAX-WS service 
 *
 * @author John Yeary &lt;jyeary@bluelotussoftware.com&gt;
 * @version 1.0.0
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="cm">/**
     * Main method.
     *
     * @param args command line arguments passed to the application. Currently unused.
     * @throws LifecycleException If a life cycle exception occurs.
     * @throws InterruptedException If the application is interrupted while waiting for requests.
     * @throws ServletException If the servlet handling the response has an exception.
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
            <span class="kd">throws</span> <span class="nc">LifecycleException</span><span class="o">,</span> <span class="nc">InterruptedException</span><span class="o">,</span> <span class="nc">ServletException</span> <span class="o">{</span>
        <span class="nc">Tomcat</span> <span class="n">tomcat</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tomcat</span><span class="o">();</span>
        <span class="n">tomcat</span><span class="o">.</span><span class="na">setPort</span><span class="o">(</span><span class="mi">8080</span><span class="o">);</span>
        <span class="n">tomcat</span><span class="o">.</span><span class="na">setBaseDir</span><span class="o">(</span><span class="s">"target/tomcat"</span><span class="o">);</span>
        <span class="nc">Host</span> <span class="n">host</span> <span class="o">=</span> <span class="n">tomcat</span><span class="o">.</span><span class="na">getHost</span><span class="o">();</span>
        <span class="n">host</span><span class="o">.</span><span class="na">setAppBase</span><span class="o">(</span><span class="s">"."</span><span class="o">);</span>
        <span class="n">host</span><span class="o">.</span><span class="na">setAutoDeploy</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="n">host</span><span class="o">.</span><span class="na">setDeployOnStartup</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="nc">File</span> <span class="n">ws</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"src/test/resources/simple-jaxws-1.0.0.war"</span><span class="o">);</span>
        <span class="n">tomcat</span><span class="o">.</span><span class="na">addWebapp</span><span class="o">(</span><span class="n">host</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="n">ws</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
        <span class="n">tomcat</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
        <span class="n">tomcat</span><span class="o">.</span><span class="na">getServer</span><span class="o">().</span><span class="na">await</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>This will start the application when you run it on (http://localhost:8080) and sets the default application to the base directory. It is very simple to setup and use.</p>

<h3 id="simpleservice">SimpleService</h3>

<p>The service that is exposed can be found in the <a href="https://github.com/jyeary/simple-jaxws">simple-jaxws</a> project. It requires a couple of files like <em>sun-javaws.xml</em> and the actual service. Since the application is running on a Servlet 3.0+ based server it does not require a <em>web.xml</em> file.</p>

<h4 id="sun-javawsxml">sun-javaws.xml</h4>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;endpoints</span> <span class="na">version=</span><span class="s">"2.0"</span> <span class="na">xmlns=</span><span class="s">"http://java.sun.com/xml/ns/jax-ws/ri/runtime"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;endpoint</span> <span class="na">implementation=</span><span class="s">"com.bluelotussoftware.example.Simple"</span> <span class="na">name=</span><span class="s">"SimpleService"</span> <span class="na">url-pattern=</span><span class="s">"/*"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/endpoints&gt;</span>
</code></pre></div></div>

<h4 id="simplejava">Simple.java</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">.</span><span class="na">example</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.jws.WebMethod</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.jws.WebService</span><span class="o">;</span>

<span class="cm">/**
 * A simple service that returns the current date when called.
 *
 * @author&lt;a href="mailto:jyeary@bluelotussoftware.com"&gt;John Yeary&lt;/a&gt;
 * @version 1.0.0
 */</span>
<span class="nd">@WebService</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Simple</span> <span class="o">{</span>

    <span class="cm">/**
     * This operation returns the current date when it was run.
     *
     * @return current date.
     */</span>
    <span class="nd">@WebMethod</span><span class="o">(</span><span class="n">operationName</span> <span class="o">=</span> <span class="s">"getCurrentDate"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">Date</span> <span class="nf">getCurrentDate</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">Date</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="summary">Summary</h3>

<p>Implementing a JAX-WS service on embedded Apache Tomcat is simple to do. Using this techique will allow you to write unit tests (integration tests) that can improve your code quality.</p>

	  ]]></description>
	</item>

	<item>
	  <title>SPAMC and Java</title>
	  <link>//2018-09-20-spamc-and-java.html</link>
	  <author></author>
	  <pubDate>2018-09-20T20:45:12+00:00</pubDate>
	  <guid>//2018-09-20-spamc-and-java.html</guid>
	  <description><![CDATA[
	     <h2 id="introduction">Introduction</h2>

<p>I was tasked with trying to find a quick way to test if a SpamAssassin server was running. The idea was that we needed to not only check it, but if there was a framework out there that would make it simple.</p>

<p>In fact, we had developed our own framework over time by various developers with different approaches. However, I would like to replace it with something that will work for us that was designed from the bottom up as an implementation of SPAMC for Java. I thought it might be something I would end up writing, but alas I found one that is well written and easy to use.</p>

<h2 id="spamc">spamc</h2>

<p><a href="https://github.com/alphabox/spamc">spamc</a> written by Daniel Mecsei at Alphabox does the job. It is an F/OSS framework that makes communicating with SpamAssassin extremely easy. The Github project has an example that I won’t repeat here, but trust me, it is easy to implement and use.</p>

<h2 id="as-for-me">As for me…</h2>

<p>I needed to test the service and wrote a quick implementation that worked something like this.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">spamc</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
    
    <span class="kn">import</span> <span class="nn">hu.alphabox.spamc.SAClient</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">hu.alphabox.spamc.SACommand</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">hu.alphabox.spamc.SARequest</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">hu.alphabox.spamc.SAResponse</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
    <span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">junit</span><span class="o">.</span><span class="na">Assert</span><span class="o">.*;</span>
    
    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SPAMCTest</span> <span class="o">{</span>
    
        <span class="kd">public</span> <span class="nf">SPAMCTest</span><span class="o">()</span> <span class="o">{</span>
        <span class="o">}</span>
    
        <span class="nd">@Test</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testPong</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
            <span class="nc">SARequest</span> <span class="n">saRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SARequest</span><span class="o">();</span>
            <span class="n">saRequest</span><span class="o">.</span><span class="na">setCommand</span><span class="o">(</span><span class="nc">SACommand</span><span class="o">.</span><span class="na">PING</span><span class="o">);</span>
            <span class="n">saRequest</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            <span class="nc">SAClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SAClient</span><span class="o">(</span><span class="s">"localhost"</span><span class="o">,</span> <span class="mi">783</span><span class="o">);</span>
            <span class="nc">SAResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">sendRequest</span><span class="o">(</span><span class="n">saRequest</span><span class="o">);</span>
            <span class="nc">String</span> <span class="n">expected</span> <span class="o">=</span> <span class="s">"SPAMD/1.5 0 PONG\r\n"</span><span class="o">;</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getHeaders</span><span class="o">());</span>
            <span class="n">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">getHeaders</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>Java Tip of the Day: StandardCharsets</title>
	  <link>//2018-09-20-java-tip-of-the-day-standardcharsets.html</link>
	  <author></author>
	  <pubDate>2018-09-20T12:00:33+00:00</pubDate>
	  <guid>//2018-09-20-java-tip-of-the-day-standardcharsets.html</guid>
	  <description><![CDATA[
	     <h2 id="introduction">Introduction</h2>

<p>It is important to look at other people’s code. It often gives us
insight into undiscovered content and ideas that we can put into our own
toolbox of code.</p>

<p>We do a lot of the same coding over and over on different projects.
Often because we don’t have a common framework to share between
projects, or we don’t want to include a framework into a project just to
use one, or two classes from it. It is often better to find code which
is part of Java itself, or a must have framework that is included in our
projects, e.g. Apache Commons XXX.</p>

<p>Yesterday, I was looking at a unit test and saw the following:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nc">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">.</span><span class="na">name</span><span class="o">();</span>
</code></pre></div></div>
<p>I paused and asked myself what is that? When I opened it in NetBeans, I
realized that I had missed a piece of code from Java 7 that could make
my life easier.</p>

<p>I often find that I am using a String to set the value for “UTF-8”, or
setting the Charset and wrapping it to catch any exceptions. Some</p>

<h2 id="standardcharsets">StandardCharsets</h2>

<p>This
<a href="https://docs.oracle.com/javase/10/docs/api/java/nio/charset/StandardCharsets.html">StandardCharsets</a>
class is in the JRE starting with Java 7 and as noted in the Javadoc:</p>

<blockquote>
  <p>Constant definitions for the standard Charsets. These charsets are
guaranteed to be available on every implementation of the Java
platform.</p>
</blockquote>

<p>Now you can skip having to create your own code and use the standard
Java class which is guaranteed to exist.</p>

<blockquote>
  <p>$ jshell | Welcome to JShell – Version 10.0.2 | For an introduction
type: /help intro</p>

  <p>jshell&gt; import java.nio.charset.StandardCharsets;</p>

  <p>jshell&gt; System.out.println(StandardCharsets.UTF_8.name());</p>

  <p>UTF-8</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>

<p>Though this may not bring about world peace, or even get you a cup of
coffee, it is a nice little piece of code when you need it in a pinch.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span> <span class="o">(</span><span class="nc">ByteArrayOutputStream</span> <span class="n">baos</span> <span class="o">=</span> <span class="o">...)</span> <span class="o">{</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">baos</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="nc">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">.</span><span class="na">name</span><span class="o">()));</span>
<span class="o">}</span>
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>j2html framework</title>
	  <link>//2018-09-15-j2html-framework.html</link>
	  <author></author>
	  <pubDate>2018-09-15T15:50:14+00:00</pubDate>
	  <guid>//2018-09-15-j2html-framework.html</guid>
	  <description><![CDATA[
	     <p>I had my first exposure to this fun and easy to use framework in Java Magazine - <a href="http://www.javamagazine.mozaicreader.com/JulyAugust2018/facebook#&amp;pageSet=27&amp;page=0&amp;contentItem=0&quot;">j2html: An HTML5 Generator Library</a>. I have to say that it is slick and easy for the most part. The more HTML you use… the more complex it becomes. However, if you need to output an error page, a login page on the fly, or simple pages to display information, this framework is hard to beat.</p>

<p>This example is from Java Magazine… You really need to read the well written article.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">j2html</span><span class="o">.</span><span class="na">TagCreator</span><span class="o">.*;</span>
<span class="kn">import</span> <span class="nn">j2html.tags.Tag</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Example3</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">output</span> <span class="o">=</span> <span class="n">form</span><span class="o">()</span>
                <span class="o">.</span><span class="na">withMethod</span><span class="o">(</span><span class="s">"post"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">with</span><span class="o">(</span>
        <span class="n">genericInput</span><span class="o">(</span><span class="s">"text"</span><span class="o">,</span> <span class="s">"username"</span><span class="o">,</span> <span class="s">"Enter your Username"</span><span class="o">),</span>
        <span class="n">genericInput</span><span class="o">(</span><span class="s">"password"</span><span class="o">,</span> <span class="s">"password"</span><span class="o">,</span> <span class="s">"Enter your password"</span><span class="o">),</span>
        <span class="n">submitButton</span><span class="o">())</span>
                <span class="o">.</span><span class="na">renderFormatted</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">output</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">Tag</span> <span class="nf">genericInput</span><span class="o">(</span><span class="nc">String</span> <span class="n">type</span><span class="o">,</span> <span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">placeholder</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nf">input</span><span class="o">()</span>
                <span class="o">.</span><span class="na">withType</span><span class="o">(</span><span class="n">type</span><span class="o">)</span>
                <span class="o">.</span><span class="na">withId</span><span class="o">(</span><span class="n">name</span><span class="o">)</span>
                <span class="o">.</span><span class="na">withPlaceholder</span><span class="o">(</span><span class="n">placeholder</span><span class="o">)</span>
                <span class="o">.</span><span class="na">isRequired</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">Tag</span> <span class="nf">submitButton</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nf">button</span><span class="o">(</span><span class="s">"Login"</span><span class="o">).</span><span class="na">withType</span><span class="o">(</span><span class="s">"submit"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p>A login page done programmatically. How slick is that? Read the article and share the love.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Netty and JAX-RS (Jersey)</title>
	  <link>//2018-09-15-netty-and-jax-rs-jersey.html</link>
	  <author></author>
	  <pubDate>2018-09-15T15:21:52+00:00</pubDate>
	  <guid>//2018-09-15-netty-and-jax-rs-jersey.html</guid>
	  <description><![CDATA[
	     <h3 id="introduction">Introduction</h3>

<p>Netty and Jersey are a great combination for providing RESTful web services based on JAX-RS. Netty is designed for high-throughput, and Jersey is designed for ease of use. The example application below is an attempt to make demonstrate how to use these powerful technologies in short order.</p>

<h3 id="code">Code</h3>

<p>The following class can be re-used in your personal projects in in a simple manner.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">bluelotussoftware</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">io.netty.channel.Channel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URI</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.glassfish.jersey.netty.connector.NettyConnectorProvider</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.glassfish.jersey.netty.httpserver.NettyHttpContainerProvider</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.glassfish.jersey.server.ResourceConfig</span><span class="o">;</span>

<span class="cm">/**
 * A basic implementation of {@link NettyConnectorProvider} providing HTTP and HTTP/2 servers for the {@link URI} and
 * resource classes provided.
 *
 * @author John Yeary &amp;lt;jyeary@bluelotussoftware.com&amp;gt;
 * @version 1.0.0
 */</span>
<span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">NettyServerProviders</span> <span class="o">{</span>

    <span class="cm">/**
     * Initializes a {@link NettyHttpContainerProvider} using the provided {@link URI} and resource classes with HTTP
     * 1.1.
     *
     * @param baseURI The base URI to connect to the server.
     * @param classes The resource classes to provide serve using this provider.
     * @return A initialized Netty {@link Channel}.
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">Channel</span> <span class="nf">initializeNettyHttpServer</span><span class="o">(</span><span class="kd">final</span> <span class="nc">String</span> <span class="n">baseURI</span><span class="o">,</span> <span class="kd">final</span> <span class="nc">Class</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;?&amp;</span><span class="n">gt</span><span class="o">;...</span> <span class="n">classes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="nc">ResourceConfig</span> <span class="n">rc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ResourceConfig</span><span class="o">(</span><span class="n">classes</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">NettyHttpContainerProvider</span><span class="o">.</span><span class="na">createServer</span><span class="o">(</span><span class="no">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">baseURI</span><span class="o">),</span> <span class="n">rc</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/**
     * Initializes a {@link NettyHttpContainerProvider} using the provided {@link URI} and resource classes with HTTP/2.
     *
     * @param baseURI The base URI to connect to the server.
     * @param classes The resource classes to provide serve using this provider.
     * @return A initialized Netty {@link Channel}.
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">Channel</span> <span class="nf">initializeNettyHttp2Server</span><span class="o">(</span><span class="kd">final</span> <span class="nc">String</span> <span class="n">baseURI</span><span class="o">,</span> <span class="kd">final</span> <span class="nc">Class</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;?&amp;</span><span class="n">gt</span><span class="o">;...</span> <span class="n">classes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="nc">ResourceConfig</span> <span class="n">rc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ResourceConfig</span><span class="o">(</span><span class="n">classes</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">NettyHttpContainerProvider</span><span class="o">.</span><span class="na">createHttp2Server</span><span class="o">(</span><span class="no">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">baseURI</span><span class="o">),</span> <span class="n">rc</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>The implementation is just as easy.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">final</span> <span class="nc">Channel</span> <span class="n">httpServer</span> <span class="o">=</span> <span class="nc">NettyServerProviders</span><span class="o">.</span><span class="na">initializeNettyHttpServer</span><span class="o">(</span><span class="no">BASE_URI_HTTP</span><span class="o">,</span> <span class="nc">HelloResource</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</code></pre></div></div>

<p>As you can see, we are providing it with a single resource class called <strong>HelloResource.class</strong>. However, the <strong>NettyServerProviders.class</strong> accepts an array of resource classses, so you can simply just add them as necessary,e.g.,<code class="highlighter-rouge">final Channel httpServer = NettyServerProviders.initializeNettyHttpServer(BASE_URI_HTTP, HelloResource.class, Resource2.class, Resource3.class, Resource4.class);</code></p>

<h3 id="project">Project</h3>

<p>The application can be downloaded from Github here: <a href="https://github.com/jyeary/jersey-netty-service">jersey-netty-service</a>.</p>

	  ]]></description>
	</item>


</channel>
</rss>
