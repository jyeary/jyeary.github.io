<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>johnyeary.com/</title>
   
   <link>https://johnyeary.com</link>
   <description>A Caffeinated Java Developer.</description>
   <language>en-us</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Postfix smtp-source command</title>
	  <link>//2018-03-11-postfix-smtp-source-command.html</link>
	  <author></author>
	  <pubDate>2018-03-11T17:47:09+00:00</pubDate>
	  <guid>//2018-03-11-postfix-smtp-source-command.html</guid>
	  <description><![CDATA[
	     <p>I was looking at some ideas for re-implementing an SMTP server that I work on for my day job. As I was reading about a <a href="https://netty.io/index.html">netty</a> example implementation called <a href="https://github.com/brightcode/smtpd">smptd</a> on github. I saw something very interesting. He was testing his code using a command from <a href="http://www.postfix.org">Postfix</a> called <a href="http://www.postfix.org/smtp-source.1.html">smtp-source</a>. I was immediately interested. I pulled his example code and updated it for a newer version of netty (3.10.6) and started it up. I then pulled an <a href="https://hub.docker.com/_/ubuntu/">Ubuntu</a> image from <a href="https://hub.docker.com">Docker Hub</a> and started it up. Once it was started, I used apt-get to install Postfix. The result was that I had my own little test environment up in about 5 minutes. So I tested the code from the smtpd project on my Windows 10 Pro machine (<a href="http://www8.hp.com/us/en/campaigns/pavilion-wave/overview.html">HP Pavillion Wave</a> for those who are interested) using the smtp-source command from a Docker container. Here were my results.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>time smtp-source -c -d -l 32000 -m 10000 -N -s 100 10.0.1.9:2525
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>real 0m12.543s
user 0m0.410s
sys 0m2.640s
</code></pre></div></div>

<p>The results were very interesting on a non-server class machine, or environment. It handled 10,000 email requests with 100 simultaneous connections in 12 seconds. I was impressed. <code class="language-plaintext highlighter-rouge">time</code> is a built in function on UNIX machines. The <strong>real</strong> time is the time that was used to process the requests. This was just a really good demonstration of Docker, containers, Postfix tools, and netty.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Tip: X-Window Display on localhost from Remote system (UNIX/Solaris/Linux/OS X)</title>
	  <link>//2009-12-24-tip-x-window-display-on-localhost-from-remote-system-unixsolarislinuxos-x.html</link>
	  <author></author>
	  <pubDate>2009-12-24T14:53:00+00:00</pubDate>
	  <guid>//2009-12-24-tip-x-window-display-on-localhost-from-remote-system-unixsolarislinuxos-x.html</guid>
	  <description><![CDATA[
	     <p>X-Window display on local host with known hostname or IP address:</p>
<ol>
  <li>Confirm remote host has Xaccess configured to allow remote connections.
  <strong>Note:</strong>The file is located in /etc/dt/conf/ on Solaris 9</li>
  <li>Type on the local host:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  X -query &lt;hostname or IP address&gt;
</code></pre></div>    </div>
  </li>
</ol>

	  ]]></description>
	</item>

	<item>
	  <title>Tip: Resetting Enviroment Variables without Logging Out (UNIX/Solaris/Linux/OS X)</title>
	  <link>//2009-12-24-tip-resetting-enviroment-variables-without-logging-out-unixsolarislinuxos-x.html</link>
	  <author></author>
	  <pubDate>2009-12-24T14:47:00+00:00</pubDate>
	  <guid>//2009-12-24-tip-resetting-enviroment-variables-without-logging-out-unixsolarislinuxos-x.html</guid>
	  <description><![CDATA[
	     <p>To reset environment variable changes in bash without logging out</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source ~/.profile
</code></pre></div></div>
<p>Confirm changes by:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>set | grep &lt;changed parameter&gt;
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>Tip: XDMCP using Cygwin (UNIX/Solaris/Linux/OS X)</title>
	  <link>//2009-12-24-tip-xdmcp-using-cygwin-unixsolarislinuxos-x.html</link>
	  <author></author>
	  <pubDate>2009-12-24T14:43:00+00:00</pubDate>
	  <guid>//2009-12-24-tip-xdmcp-using-cygwin-unixsolarislinuxos-x.html</guid>
	  <description><![CDATA[
	     <p>XDMCP to a UNIX system using <a href="http://www.cygwin.com/">cygwin</a> on Windows.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>XWin.exe -kb :0 -query [hostname or ip address]
</code></pre></div></div>

	  ]]></description>
	</item>

	<item>
	  <title>Tip: Redirect Output to a tty (UNIX/Solaris/Linux/OS X)</title>
	  <link>//2009-12-24-tip-redirect-output-to-a-tty-unixsolarislinuxos-x.html</link>
	  <author></author>
	  <pubDate>2009-12-24T14:39:00+00:00</pubDate>
	  <guid>//2009-12-24-tip-redirect-output-to-a-tty-unixsolarislinuxos-x.html</guid>
	  <description><![CDATA[
	     <p>Redirect ouptut to tty using the following command:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>script -a /dev/null | tee /dev/pts/XXX
</code></pre></div></div>
<p>Where XXX is the <code class="language-plaintext highlighter-rouge">tty</code> target</p>

	  ]]></description>
	</item>


</channel>
</rss>
